# This workflow will install Python dependencies, run tests and lint with a 
# single version of Python
# For more information see: 

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  integration:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
        export PATH="$HOME/.poetry/bin:$PATH"
        source $HOME/.poetry/env
    - name: echo PATH
      run: |
        echo $PATH
        export PATH="$HOME/.poetry/bin:$PATH"
        source $HOME/.poetry/env
        echo $PATH
    - name: Poetry version
      run: |
        export PATH="$HOME/.poetry/bin:$PATH"
        source $HOME/.poetry/env
        poetry --version
    - name: Install dependencies
      run: |
        export PATH="$HOME/.poetry/bin:$PATH"
        source $HOME/.poetry/env
        poetry install
    - name: Test with pytest
      run: |
        export PATH="$HOME/.poetry/bin:$PATH"
        source $HOME/.poetry/env
        poetry run pytest
    - name: Build whl
      run: |
        export PATH="$HOME/.poetry/bin:$PATH"
        source $HOME/.poetry/env
        poetry build
        echo ls
  deployment:
    needs: integration
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}